
Identifiers:
    identifiers are names used to identify variables, methods, classes, or other elements in a java program.

    Rules for Naming Identifiers in Java:

        > Identifiers can only contain Letters (A-Z, a-z), Digits (0-9), Underscore (_), Dollar sign ($).
        > Must begin with a letter, underscore, or dollar sign, Cannot start with a digit.
        > Identifiers cannot be the same as Java reserved keywords (e.g., class, int, if).
        > Java identifiers are case-sensitive (Variable and variable are different).
        > Identifiers can't contain spaces, and There is no limit to the length of an identifier.

Java Naming Conventions:
    Naming conventions are not enforced by the compiler but recommended to ensure code readability and maintainability.

    > Class Names: Use PascalCase (also called UpperCamelCase).
    Example: MyClass, EmployeeDetails

    > Method Names: Use camelCase.
    Example: getDetails(), calculateSalary()

    > Variable Names: Use camelCase.
    Example: employeeName, totalSalary

    > Constants: Use all UPPERCASE letters with words separated by underscores.
    Example: PI, MAX_VALUE

    > Packages: Use all lowercase letters.
    Example: com.example.myapp




    ******  static method
    ******  constructors
    ******  Object type arrays
    ******  interfaces
    ******  enums



    Divisible outputs
    return type / print statements
    Math module
    chr and int data type storing
    wrapper class
    object reusing concept
    abstraction
    encapsulation
    difference between import and inheritance?
    P p = new P();
    C c = new C();
    P p = new C();
    what is reference, what is object?
    object type casting
    input/output (i/o)



************** collections
************** multi threading
    > exception handling
    > java 8 features:
        lambda expression
        streams API
        Functional interface
    > memory management


