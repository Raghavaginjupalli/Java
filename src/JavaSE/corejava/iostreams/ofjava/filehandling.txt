Java Stream:
    A stream is a logical connection between a java program and file, networks, memory, thorough which we will read or writing data into file.
    By using stream we can store or retrieve two type of data:
        > 1 Binary Streams:
            To store or write numerical data use binary stream.

        > 2 Character Streams:
            To store or write text/ character data use Character stream.

    Input Stream/Reader (Binary/char):
        The stream which we read data into inside java program which is called input stream.

    Output Stream/Writer (Binary/char):
        The stream which we write data to file from java program which is called output stream.

    NOTE: For input & output we use separate streams.


    Java Streams
       |
       |---> Binary Streams
       |         |
       |         |---> InputStream (FileInputStream, BufferedInputStream, DataInputStream, ObjectInputStream)
       |         |
       |         |---> OutputStream (FileOutputStream, BufferedOutputStream, DataOutputStream, ObjectOutputStream)
       |
       |---> Character Streams
       |         |
       |         |---> Reader (FileReader, BufferedReader, InputStreamReader, StringReader)
       |         |
       |         |---> Writer (FileWriter, BufferedWriter, OutputStreamReader, StringWriter)




    Features of I/O Streams:

        File Streams:
           For file handling specifically.
           Classes: FileInputStream, FileOutputStream, FileReader, FileWriter.
           |
           |--> Buffered Streams:
           |       Improve performance by reducing the number of I/O operations.
           |       Classes: BufferedInputStream, BufferedOutputStream, BufferedReader, BufferedWriter.
           |
           |--> Data Streams:
           |       Allow reading and writing of primitive data types and strings.
           |       Classes: DataInputStream, DataOutputStream.
           |
           |--> Object Streams:
           |       Used for serializing and deserializing objects.
           |       Classes: ObjectInputStream, ObjectOutputStream.


Basic methods of Input/Output:
Input methods:

      Method 	                                                Description
   > int read()	                                Reads the next byte of data from the input stream.
                                                Returns -1 if the end of the stream is reached.

   > int read(byte[] b)	                        Reads up to b.length bytes into the specified byte array.
   > int read(byte[] b, int off, int len)	    Reads up to len bytes into the specified byte array starting from offset off.
   > long skip(long n)	                        Skips over and discards n bytes of data from the input stream.
   > int available()	                        Returns an estimate of the number of bytes available for reading without blocking.
   > void close()	                            Closes the input stream and releases any system resources associated with it.

Output methods:

        Method	                                                Description
    void write(byte[] b)	                    Writes the entire byte array to the output stream.
    void write(byte[] b, int off, int len)	    Writes len bytes from the specified byte array, starting at the specified offset off, to the output stream.
    void flush()	                            Flushes the output stream and forces any buffered output bytes to be written.
    void close()	                            Closes the output stream and releases any system resources associated with it.